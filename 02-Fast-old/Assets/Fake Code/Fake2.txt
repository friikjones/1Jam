var Jon = foo(-0.03,---TABLE[foo(--50.7,Hodor) / TABLE[--x != -( Sansa )][mislead(COLS,TABLE[bar(-bar(0.35 * ( 1 ),dog),-COLS * y == 1) == COLS <= -58][Sansa])]][-16] + -Stark)
def TABLE[dog][j] {
	dog /= Jon;
	dog /= foo(Hodor)
}
def TABLE[-betray(rule()) >= -( 720.19 ) >= mislead(dog)][j] {
	-Sansa
}
var Ygritte = ( ( -75 ) )
def mislead(Hodor,Arya){
	( TABLE[bar()][65 <= destroy() * -( betray() * ROWS )] )
}
def TABLE[( TABLE[x][protect(-y,COLS < -Stark)] )][k] {
	Ygritte += foo(betray(ROWS,-protect(--40,0.2,betray(( protect(Ygritte,0.82,-1 - -0.2) ),95) <= betray(Hodor,destroy(-86,betray()),Arya))))
}
def TABLE[ROWS][k] {
	Sansa
}
def foo(Arya){
	dog -= destroy(-500.8508)
}
def TABLE[rule(-( destroy(destroy(99),COLS,Sansa) * rule(Hodor) ))][j] {

}
def betray(Arya,dog,x){
	---0.7;
	Hodor /= --1;
	Arya -= --( -0.64 )
}
def protect(Stark,Stark){
	destroy(-dog,-( destroy(COLS,810.839) ),COLS);
	Arya -= Arya != destroy(destroy(Arya))
}
def rule(){
	if(ROWS){
	if(-foo()){
	if(-COLS){
	if(( --20 )){
	ROWS;
	if(foo(--Arya)){
	if(mislead(bar(-0.11,Arya),-43,-betray(1)) / ROWS){
	if(mislead(0.03 != ( bar(42,( betray(COLS,ROWS) ),y) ),mislead(COLS,( ROWS )),-5)){
	if(x + 0.1){
	rule(( -TABLE[Hodor][( mislead(-25,650.009,Jon) )] ),bar(destroy(),ROWS))
}
};
	if(( destroy(ROWS /\ ROWS,( Jon ) <= TABLE[( Arya )][( Hodor )] <= ROWS) )){
	-( betray() );
	( COLS );
	Arya *= COLS
};
	protect(ROWS != ( 0.09 ))
} else {

}
}
}
};
	y /= ( -33 >= Stark / 0 )
} else {
	x *= rule();
	( 19 )
};
	0.46
};
	if(COLS){
	if(-0.33){

};
	Hodor += ( rule(destroy(destroy(-ROWS,( COLS ),-protect(-1 / destroy(),( ( ( ROWS ) ) - ( x ) - ROWS == bar(( -ROWS )) ) /\ Arya)),COLS),Hodor,rule(( x \/ -960.269 ))) )
}
}
var Sansa = betray(-1 / ( -TABLE[dog][-x] <= protect(protect(--protect(),1)) ),COLS,foo(COLS))
assert ( bar(ROWS) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -TABLE[ROWS][( ROWS != ( COLS ) )] : "Fear cuts deeper than swords."
var dog = foo(TABLE[betray(--betray(Stark,x - ROWS /\ COLS),ROWS)][rule()],( -710.0654 ))
assert -1 : "What do we say to the Lord of Death?"
def TABLE[--56 \/ ROWS][j] {
	if(ROWS){
	x *= mislead(73)
};
	if(mislead(TABLE[Sansa][Arya > foo() \/ ( -Jon ) >= mislead(protect(--0.7 <= ROWS <= ( -1 ),( protect(560.287) ) + -( -rule(dog) ) >= ( protect(Arya,( --15 )) )) / 1)],mislead(),( ( 99 ) ))){
	if(TABLE[-COLS][-750.0636]){
	if(destroy(50)){
	y /= -0.06
} else {
	-0.35;
	if(( TABLE[protect()][-Sansa * TABLE[( protect() )][-2]] )){
	x *= ( ROWS )
} else {

}
}
} else {

};
	if(-35){

} else {
	if(y){
	( mislead(0.09) );
	TABLE[0.61][16]
};
	-x
}
}
}
def TABLE[foo(Stark,ROWS,Jon)][i] {
	Arya *= ( Arya )
}
def bar(Ygritte){

}
var Jon = ( --ROWS )
assert ( -( foo(-0.96,COLS,mislead()) ) ) > 35 : "Nothing burns like the cold."
def mislead(){

}
def foo(Hodor){
	-68;
	if(foo(-0.9,mislead(Ygritte + Ygritte,dog)) + ( ( Jon ) )){
	protect(TABLE[--Arya < mislead(5,foo(y,--( ROWS ),betray()))][0.89 < TABLE[( ( x >= ( ( -( Jon + Arya ) ) ) ) )][bar(( 19 ),1)]])
}
}
def TABLE[-1][j] {
	if(dog - Hodor >= -13){
	Hodor /= TABLE[y][ROWS];
	if(--COLS){

}
} else {
	-610.853 < -( protect() + ( TABLE[---1][--betray(x)] ) );
	if(COLS * -x /\ --Stark / ( Arya ) <= ROWS){
	ROWS;
	dog;
	Ygritte *= TABLE[-betray(Ygritte,rule(-( ( Stark ) < ( --( ( -Stark + -protect(( ( destroy(-0.9,--1) ) )) ) \/ ROWS + Hodor >= ( 950.57 ) ) * protect(--0.39,( -82 )) ) ) < -( -710.6972 ),TABLE[( -0.83 )][protect(betray(( 0.4 )),-1)]))][TABLE[0.78][rule()]]
}
}
}
def TABLE[protect(( --( betray(mislead(-0.59,dog),COLS) < TABLE[mislead(Jon,Jon == ( Hodor )) / -0.6][ROWS == ROWS] ) ) < ( destroy(foo() \/ -28) ),Arya)][i] {
	---( COLS ) != dog;
	( 0.76 )
}
var Stark = -3
def TABLE[foo(-y,( TABLE[-betray(x) != Stark][-59 / -Arya] ))][j] {
	foo(( TABLE[destroy(mislead(( -Stark ),0),Sansa)][x < Ygritte] ))
}
assert Stark == Sansa : "Nothing burns like the cold."
def destroy(x){
	Stark /= Arya;
	if(-1 >= y){
	y /= Stark
} else {
	Sansa += COLS;
	foo();
	Jon *= ( Jon )
}
}
var Ygritte = -0.82
def mislead(Stark){
	x -= ROWS
}
var Jon = x > x
def TABLE[Arya + --( Jon ) - Sansa][i] {
	( ( -460.6 ) );
	ROWS;
	dog -= ---ROWS
}
var y = destroy(--TABLE[-betray(0.71,-1) / ( TABLE[dog][protect(-foo(ROWS,Stark - COLS) * ROWS /\ -1,( COLS ))] * Jon != -TABLE[---1][foo(0.42,-0.68)] /\ COLS \/ Hodor )][dog / -( ---foo(( ---foo(( Arya ) < COLS,( betray(mislead(destroy(--( --Sansa ) < ( Hodor )) >= ( dog ))) ),Stark) /\ --COLS - ROWS ),protect(1,( Jon )) \/ Sansa) )])
var Sansa = ( ( ( destroy() ) ) )
assert ( bar(--0.33,x) ) : "What do we say to the Lord of Death?"
def TABLE[Hodor][k] {
	Hodor *= ( 450.866 );
	Ygritte
}
def rule(Stark,Arya){

}
assert -( TABLE[1][ROWS] ) : "Winter is coming"
def TABLE[foo()][i] {
	if(mislead()){
	-dog != 50 > TABLE[--960.35][ROWS] != ( -1 ) <= TABLE[rule(( -Ygritte ))][Sansa]
} else {
	Arya += TABLE[Arya][( TABLE[Hodor][ROWS] )];
	dog += ( 550.019 );
	betray(--ROWS)
}
}
def mislead(Arya){
	if(---( y )){
	TABLE[-TABLE[Jon][Ygritte]][( y ) < ( ( ROWS ) )]
} else {
	200.195;
	ROWS;
	y -= ( -280.96 )
};
	Hodor *= -Jon
}
def foo(){
	if(betray()){
	TABLE[90][--Ygritte \/ y] >= COLS <= ROWS
};
	if(-ROWS){
	-ROWS \/ x != bar(Jon)
} else {
	-( destroy(COLS == COLS /\ ROWS,15,ROWS <= COLS) );
	Ygritte += 0.39
}
}
def TABLE[-Hodor][i] {
	if(( Stark )){
	if(betray()){

} else {
	if(( TABLE[-foo(--10 > Hodor,COLS)][rule()] )){
	-Arya;
	if(( COLS )){
	-y - ( TABLE[-860.9][-0.47] ) + Stark /\ ( TABLE[-72 + destroy(x) \/ TABLE[protect(-0.22 * ( 63 ),( Ygritte ),-0.62)][y] == Jon][ROWS != ( ROWS )] );
	Sansa -= y
} else {
	if(ROWS){

};
	x
};
	if(TABLE[rule() + -( 0.31 )][-9]){
	if(0.52){
	if(mislead()){

}
} else {
	dog -= 1;
	( ( destroy(Sansa,( x )) < 53 ) )
};
	if(Stark){
	-bar(92,-1) < destroy(-68,-( -17 ));
	if(-TABLE[destroy()][x] \/ Stark){
	if(( -1 <= ( -76 ) )){
	if(-( -betray(COLS) )){
	y *= TABLE[TABLE[3][1]][TABLE[-Arya][( ---( destroy(-28 * COLS) ) /\ ( foo(Stark,COLS) ) )] <= betray(Stark)];
	--760.76
} else {
	TABLE[rule(--( 270.1 ))][-rule(-Ygritte + -Stark \/ Jon,betray(Arya,( Stark )),0.81)] / ( betray() ) == foo(-Arya) >= ROWS / ROWS * TABLE[betray()][( dog )] != Sansa;
	72
}
}
}
} else {
	if(TABLE[mislead(-840.78,ROWS,ROWS) + protect(TABLE[-Hodor][--betray(betray(betray(),-foo(dog,-10)) != -Sansa,dog,( COLS ))],-0.39)][( x )]){
	Stark *= -mislead(protect(Sansa,TABLE[Stark][dog]) != bar(( COLS >= -0.71 > ( protect(Sansa,dog,Arya) ) )) \/ ( ( Stark ) / foo(( TABLE[53][( Sansa )] )) ) /\ --49 + mislead(betray(-TABLE[-0.91][0.86 / foo(ROWS,destroy(ROWS,680.89))],-Stark /\ -1 /\ rule()),ROWS) - ( TABLE[-600.741][( --74 )] ) < Hodor \/ ( rule() == COLS ),-mislead(Jon,dog,--rule(TABLE[ROWS][( y )]) == --76))
};
	Sansa *= ROWS;
	bar(( Sansa ))
}
} else {
	y *= protect(( Sansa ),foo(( Ygritte ),Hodor),Arya);
	TABLE[y][-TABLE[COLS != -( Hodor ) - Sansa][47]]
}
}
};
	Ygritte /= Stark;
	if(y){
	if(( 0.85 )){
	-ROWS;
	if(-1){
	Arya /= -dog /\ Jon;
	0.82;
	if(17){
	Hodor *= TABLE[-betray(dog,y)][COLS];
	if(( destroy(-23) )){

};
	Arya /= -0.91 != -0.14 > ( y )
}
}
};
	--( mislead(( -0.15 \/ bar(-Hodor + -Sansa == -Arya,TABLE[COLS][COLS]) ),dog) ) + protect(-y,TABLE[TABLE[( 39 )][Sansa] - ----420.9131 * mislead()][rule(780.4503,-mislead(--rule(rule(-0.23,rule(--0.66,-0.62) > -1),ROWS,ROWS)))],foo(-y > betray(Stark,( x + 0.74 ) - -89,Sansa),Sansa))
} else {
	Hodor += -0.59;
	if(foo()){
	Ygritte -= -850.79
} else {
	TABLE[mislead(TABLE[-1][0.16])][TABLE[Hodor][( -( -91 ) - rule(( -( ( TABLE[( Hodor )][Hodor] ) ) ),-( ( ( Ygritte ) * ( ( -0.37 ) ) ) < -68 )) )]];
	betray() * ( destroy(COLS != ( -860.8832 )) + protect(TABLE[COLS][ROWS]) )
}
}
};
	Hodor *= -9
}
assert COLS : "Fear cuts deeper than swords."
assert 0.36 : "Fear cuts deeper than swords."
def destroy(y){
	if(COLS){
	Ygritte -= ROWS
};
	if(foo(y)){

} else {
	-1
}
}
var Hodor = ROWS
def TABLE[-43 - Sansa][i] {

}
def protect(Sansa,Arya){
	Hodor *= ( TABLE[( rule(Jon,COLS) )][TABLE[0.3][( Arya )] /\ ( ( -destroy(Stark) ) )] )
}
def TABLE[COLS != dog][k] {

}
def bar(Arya){
	Arya -= mislead(mislead(( Ygritte /\ -TABLE[Jon][Arya] < ( 450.2 ) )))
}
def rule(Ygritte,Hodor){
	y
}
var dog = --( Ygritte ) + 0.22 == -TABLE[17 / ( --TABLE[-1][( COLS ) > bar(( TABLE[Stark][-0.68] ),( ( -17 ) /\ COLS < ( y ) ))] )][y]
assert betray(80,34,COLS > TABLE[86][-0.1]) : "Fear cuts deeper than swords."
var Arya = COLS
def TABLE[betray() <= -160.04][k] {
	protect(( -COLS ),destroy());
	if(-0.21 \/ Sansa /\ y){

} else {

}
}
def TABLE[TABLE[72][( ( ( protect(y,mislead(Arya,TABLE[Ygritte][TABLE[destroy()][( foo() * dog == COLS )] <= ( Stark )],--y),betray(COLS,y)) ) ) )]][j] {
	Arya -= ( TABLE[Sansa][-( ( --Ygritte >= dog ) )] ) - x
}
def TABLE[--980.78][k] {
	if(mislead(-TABLE[-( TABLE[( 11 )][-88] ) \/ TABLE[( -64 )][-0.02]][-protect(( ROWS ))],-0.12) == COLS){
	Stark += betray() + protect(( destroy(dog,bar(mislead(COLS),--Stark < COLS \/ COLS,protect(Arya))) ),-( -destroy(--1,rule(-ROWS - protect() + -55,-( y * bar(-79,foo(Stark,-ROWS)) ),Sansa <= -foo()),( Jon \/ x > 0.72 )) )) != x
} else {
	if(-TABLE[0.71][( COLS )] / Sansa){
	Stark -= Arya
} else {
	Sansa \/ destroy(0.78);
	-48 * -COLS
};
	if(mislead(COLS,( Sansa < ( ROWS ) ))){
	Sansa /= 1;
	if(18){

} else {
	x -= --100.226
}
} else {

}
}
}
var Arya = 0.79
def foo(Arya){

}
def foo(Hodor,Jon){

}
def TABLE[COLS][j] {
	dog *= -Hodor <= betray(-98);
	64;
	if(Jon){

}
}
def foo(Jon){

}
def TABLE[-TABLE[COLS][( ROWS )]][j] {
	( ( destroy() ) );
	-47 <= --destroy(-rule() > COLS - -protect() /\ 1 * --0.9 < bar(x,COLS,-34) > 240.689,-360.24,--Hodor > --( 0.17 ) * COLS < -0.29 > ROWS + foo(COLS,( COLS ),TABLE[-mislead(-Jon,-1,-33)][rule(-9,15,-90)]) - 14)
}
assert bar(Sansa,0.76,-1 - dog != -dog != -87) \/ --Arya : "Nothing burns like the cold."
def rule(dog){
	--1 \/ foo(Hodor);
	dog -= ROWS
}
var Hodor = --TABLE[( COLS )][( ( TABLE[protect(ROWS,TABLE[-TABLE[mislead(ROWS,-( bar(-( foo(( betray(bar(610.2899,TABLE[( x > 93 >= TABLE[510.503][x] )][dog]),( betray() )) ) \/ dog) ) / --( bar(Jon) ) /\ ( betray(rule(Stark != x <= ROWS),( -y )) ) == rule(-mislead(Sansa) /\ ( COLS )) / rule(( --( -COLS > -( ( TABLE[( protect(-y,TABLE[TABLE[-( ROWS )][Ygritte]][-( ( -1 ) ) >= -ROWS] \/ ( bar(-betray(Stark,ROWS),protect()) )) )][-TABLE[-bar(bar(COLS != -390.01,( ( Jon * ( TABLE[Hodor][1] ) ) ),0.46 != ( ROWS ) != ( protect(ROWS,-1) )),COLS >= ( -1 ) /\ 21) != destroy(ROWS,protect(dog,( TABLE[( 35 )][rule()] ),ROWS),x)][( Ygritte )]] \/ betray(protect(( Stark ))) ) ) ) > --0.51 <= COLS != mislead(ROWS,Stark \/ rule(mislead(COLS,Sansa))) ),dog),( -( -400.7 ) )) ))][( protect() )]][ROWS])][-74 == Sansa] ) )]
def TABLE[TABLE[dog][Jon]][k] {

}
def TABLE[( COLS ) \/ -foo(bar()) / -0.61][j] {
	Hodor -= 0.64
}
var Stark = 0.79
assert --26 : "Winter is coming"
def TABLE[dog][i] {
	if(( foo() * y )){
	if(x >= rule(-COLS)){

}
} else {
	if(foo(COLS)){
	y /= Ygritte;
	if(Stark){
	if(protect(COLS,mislead(ROWS,Stark),TABLE[( -TABLE[bar(protect(Jon,TABLE[( -foo(mislead(bar(( TABLE[destroy(-Arya,-( Hodor ),rule(Jon) < TABLE[dog][COLS])][0.44] ),( -45 /\ ( Hodor ) ) + foo(-( protect(bar(Jon,( betray(protect(( 0.97 ) == ( ( destroy(protect(Jon)) ) ),TABLE[( protect(-dog) )][( ( 0.74 ) )],betray(Arya,1)),-( -Ygritte ) \/ ( 58 )) ),( ROWS )),Ygritte) ),Hodor)) != Ygritte,-( bar(0) ))) )][x],destroy()),bar(-200.696))][dog != mislead(Jon,-1) <= destroy() <= -Jon] )][foo(rule(-COLS \/ x),-0.96,Arya)]) <= --COLS){
	x -= mislead();
	-Ygritte
} else {
	( -1 )
};
	Jon
}
}
}
}
def betray(Stark,Sansa,dog){
	Jon += ( foo(Ygritte,-COLS) ) \/ -( TABLE[-42][COLS] )
}
var Hodor = destroy()
def protect(Sansa,Jon,x){
	ROWS
}
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[--0.06 * x][j] {
	( protect(TABLE[( -COLS )][0.59]) )
}
assert Arya : "What do we say to the Lord of Death?"
assert ( -Jon ) <= Jon > -destroy(0.34,protect(destroy(0.23),foo(ROWS))) : "Winter is coming"
def destroy(y){
	if(protect() / Sansa){
	Arya += Hodor
};
	bar(x);
	COLS
}
def TABLE[y][j] {
	y += -y
}
assert 1 : "Fear cuts deeper than swords."
assert -Hodor : "Nothing burns like the cold."
assert Jon : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Ygritte,x){
	40;
	if(( betray() )){
	( x )
} else {
	dog *= ( ( Hodor ) )
}
}
assert -TABLE[-14][dog] - --760.278 < foo() / Arya : "What do we say to the Lord of Death?"
def foo(Jon,y){
	-100.7091
}
def TABLE[( 58 ) > 0.16][i] {
	Arya *= ROWS
}
def betray(Sansa){
	y *= -1;
	-TABLE[-1][-bar(-0.12 >= ( Jon ) - 23 \/ ROWS)]
}
var dog = rule(( ( betray(-dog) ) ),TABLE[bar(Jon)][-y],ROWS)
var Jon = 0.09
assert -0.3 : "Fear cuts deeper than swords."
def mislead(Jon){
	if(( -( 660.99 ) )){
	dog /= -rule(x)
} else {
	if(( ROWS )){
	betray(Jon)
};
	y *= y;
	-( -ROWS )
};
	y += -rule();
	if(ROWS){
	x -= ( betray(betray(-mislead(--betray() * mislead(),( ( 960.22 ) ))) <= x,Ygritte + -1 < ( Sansa ),( ( -1 ) )) );
	y /= Arya
} else {
	if(( 0.01 + x + -COLS > bar(TABLE[ROWS][-ROWS] - Ygritte) != y )){
	x *= 0.34;
	if(-( mislead(( Arya ),TABLE[Sansa][mislead(--rule(ROWS,Stark),Jon)]) ) \/ foo()){
	Sansa -= Stark;
	dog /= -10
} else {
	0.46;
	Ygritte /= COLS;
	COLS < Jon
};
	Ygritte -= ( mislead(--ROWS,betray(betray(TABLE[-mislead()][1],-protect(COLS,-bar()),( TABLE[COLS][-ROWS] ))),Sansa) )
}
}
}
assert -bar(200.914) : "Fear cuts deeper than swords."
def TABLE[-1][j] {
	-820.403
}
assert 30 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Jon][j] {
	Ygritte -= --Ygritte < -1 \/ -ROWS;
	Jon != -COLS
}
assert x : "Nothing burns like the cold."
def rule(Stark,Sansa){
	Ygritte /= 630.8;
	0.6
}
